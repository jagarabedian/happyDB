{
  "layout": "Line",
  "image": "image.png",
  "rdbmsId": "ffa6d5b4-a16a-498d-a428-db9be85d6a75",
  "hidden": false,
  "engine": "happyDB",
  "insightName": "Over Time",
  "recipe": "AddPanel ( 0 ) ;Panel ( 0 ) | AddPanelEvents ( { \"onSingleClick\" : { \"Unfilter\" : [ { \"panel\" : \"\" , \"query\" : \"\u003cencode\u003eUnfilterFrame(\u003cSelectedColumn\u003e);\u003c/encode\u003e\" , \"options\" : { } , \"refresh\" : true , \"default\" : true , \"Grid\" : false , \"disabled\" : false } ] } , \"onBrush\" : { \"Filter\" : [ { \"panel\" : \"\" , \"query\" : \"\u003cencode\u003eif(IsEmpty(\u003cSelectedValues\u003e), UnfilterFrame(\u003cSelectedColumn\u003e), SetFrameFilter(\u003cSelectedColumn\u003e\u003d\u003d\u003cSelectedValues\u003e));\u003c/encode\u003e\" , \"options\" : { } , \"refresh\" : true , \"default\" : true , \"disabled\" : false } ] } } ) ;Panel ( 0 ) | RetrievePanelEvents ( ) ;Panel ( 0 ) | SetPanelView ( \"visualization\" , \"\u003cencode\u003e{\"type\":\"echarts\"}\u003c/encode\u003e\" ) ;Panel ( 0 ) | SetPanelView ( \"federate-view\" , \"\u003cencode\u003e{\"core_engine\":\"happyDB\"}\u003c/encode\u003e\" ) ;CreateFrame ( grid ) .as ( [ \u0027FRAME269021\u0027 ] ) ;Database ( happyDB ) | Select ( HAPPYCSV , HAPPYCSV__Country , HAPPYCSV__Dystopia_Residual , HAPPYCSV__Economy_GDP_per_Capita , HAPPYCSV__Family , HAPPYCSV__Freedom , HAPPYCSV__Generosity , HAPPYCSV__Happiness_Rank , HAPPYCSV__Happiness_Score , HAPPYCSV__Health_Life_Expectancy , HAPPYCSV__Region , HAPPYCSV__Standard_Error , HAPPYCSV__Trust_Government_Corruption , HAPPYCSV__Year ) .as ( [ HAPPYCSV , Country , Dystopia_Residual , Economy_GDP_per_Capita , Family , Freedom , Generosity , Happiness_Rank , Happiness_Score , Health_Life_Expectancy , Region , Standard_Error , Trust_Government_Corruption , Year ] ) | Import ( ) ;Panel ( 0 ) | SetPanelView ( \"visualization\" ) ;Panel ( 0 ) | SetPanelView ( \"visualization\" ) ;Frame ( ) | Select ( Country , Dystopia_Residual , Economy_GDP_per_Capita , Family , Freedom , Generosity , HAPPYCSV , Happiness_Rank , Happiness_Score , Health_Life_Expectancy , Region , Standard_Error , Trust_Government_Corruption , Year ) .as ( [ Country , Dystopia_Residual , Economy_GDP_per_Capita , Family , Freedom , Generosity , HAPPYCSV , Happiness_Rank , Happiness_Score , Health_Life_Expectancy , Region , Standard_Error , Trust_Government_Corruption , Year ] ) | With ( Panel ( 0 ) ) | Format ( type \u003d [ \u0027table\u0027 ] ) | TaskOptions ( { \"0\" : { \"layout\" : \"Grid\" , \"alignment\" : { \"label\" : [ \"Country\" , \"Dystopia_Residual\" , \"Economy_GDP_per_Capita\" , \"Family\" , \"Freedom\" , \"Generosity\" , \"HAPPYCSV\" , \"Happiness_Rank\" , \"Happiness_Score\" , \"Health_Life_Expectancy\" , \"Region\" , \"Standard_Error\" , \"Trust_Government_Corruption\" , \"Year\" ] } } } ) | Collect ( 500 ) ;if ( ( HasDuplicates ( Country ) ) , ( Select ( Country , Average ( Dystopia_Residual ) ) .as ( [ Country , AverageofDystopia_Residual ] ) | Group ( Country ) | With ( Panel ( 0 ) ) | Format ( type \u003d [ \u0027table\u0027 ] ) | TaskOptions ( { \"0\" : { \"layout\" : \"Cloud\" , \"alignment\" : { \"label\" : [ \"Country\" ] , \"value\" : [ \"AverageofDystopia_Residual\" ] } } } ) | Collect ( 500 ) ) , ( Select ( Country , Dystopia_Residual ) .as ( [ Country , Dystopia_Residual ] ) | With ( Panel ( 0 ) ) | Format ( type \u003d [ \u0027table\u0027 ] ) | TaskOptions ( { \"0\" : { \"layout\" : \"Cloud\" , \"alignment\" : { \"label\" : [ \"Country\" ] , \"value\" : [ \"Dystopia_Residual\" ] } } } ) | Collect ( 500 ) ) ) ;if ( ( HasDuplicates ( Country ) ) , ( Select ( Country , Average ( Happiness_Score ) ) .as ( [ Country , AverageofHappiness_Score ] ) | Group ( Country ) | With ( Panel ( 0 ) ) | Format ( type \u003d [ \u0027table\u0027 ] ) | TaskOptions ( { \"0\" : { \"layout\" : \"Cloud\" , \"alignment\" : { \"label\" : [ \"Country\" ] , \"value\" : [ \"AverageofHappiness_Score\" ] } } } ) | Collect ( 500 ) ) , ( Select ( Country , Happiness_Score ) .as ( [ Country , Happiness_Score ] ) | With ( Panel ( 0 ) ) | Format ( type \u003d [ \u0027table\u0027 ] ) | TaskOptions ( { \"0\" : { \"layout\" : \"Cloud\" , \"alignment\" : { \"label\" : [ \"Country\" ] , \"value\" : [ \"Happiness_Score\" ] } } } ) | Collect ( 500 ) ) ) ;if ( ( HasDuplicates ( Region ) ) , ( Select ( Region , Average ( Happiness_Score ) ) .as ( [ Region , AverageofHappiness_Score ] ) | Group ( Region ) | With ( Panel ( 0 ) ) | Format ( type \u003d [ \u0027table\u0027 ] ) | TaskOptions ( { \"0\" : { \"layout\" : \"Cloud\" , \"alignment\" : { \"label\" : [ \"Region\" ] , \"value\" : [ \"AverageofHappiness_Score\" ] } } } ) | Collect ( 500 ) ) , ( Select ( Region , Happiness_Score ) .as ( [ Region , Happiness_Score ] ) | With ( Panel ( 0 ) ) | Format ( type \u003d [ \u0027table\u0027 ] ) | TaskOptions ( { \"0\" : { \"layout\" : \"Cloud\" , \"alignment\" : { \"label\" : [ \"Region\" ] , \"value\" : [ \"Happiness_Score\" ] } } } ) | Collect ( 500 ) ) ) ;UnfilterFrame ( Region ) ;Frame ( ) | Select ( Region , Average ( Happiness_Score ) ) .as ( [ Region , AverageofHappiness_Score ] ) | Group ( Region ) | With ( Panel ( 0 ) ) | Format ( type \u003d [ \u0027table\u0027 ] ) | TaskOptions ( { \"0\" : { \"layout\" : \"Cloud\" , \"alignment\" : { \"label\" : [ \"Region\" ] , \"value\" : [ \"AverageofHappiness_Score\" ] } } } ) | Collect ( 500 ) ;UnfilterFrame ( Region ) ;Frame ( ) | Select ( Region , Average ( Happiness_Score ) ) .as ( [ Region , AverageofHappiness_Score ] ) | Group ( Region ) | With ( Panel ( 0 ) ) | Format ( type \u003d [ \u0027table\u0027 ] ) | TaskOptions ( { \"0\" : { \"layout\" : \"Cloud\" , \"alignment\" : { \"label\" : [ \"Region\" ] , \"value\" : [ \"AverageofHappiness_Score\" ] } } } ) | Collect ( 500 ) ;UnfilterFrame ( Region ) ;Frame ( ) | Select ( Region , Average ( Happiness_Score ) ) .as ( [ Region , AverageofHappiness_Score ] ) | Group ( Region ) | With ( Panel ( 0 ) ) | Format ( type \u003d [ \u0027table\u0027 ] ) | TaskOptions ( { \"0\" : { \"layout\" : \"Cloud\" , \"alignment\" : { \"label\" : [ \"Region\" ] , \"value\" : [ \"AverageofHappiness_Score\" ] } } } ) | Collect ( 500 ) ;UnfilterFrame ( Region ) ;Frame ( ) | Select ( Region , Average ( Happiness_Score ) ) .as ( [ Region , AverageofHappiness_Score ] ) | Group ( Region ) | With ( Panel ( 0 ) ) | Format ( type \u003d [ \u0027table\u0027 ] ) | TaskOptions ( { \"0\" : { \"layout\" : \"Cloud\" , \"alignment\" : { \"label\" : [ \"Region\" ] , \"value\" : [ \"AverageofHappiness_Score\" ] } } } ) | Collect ( 500 ) ;UnfilterFrame ( Region ) ;Frame ( ) | Select ( Region , Average ( Happiness_Score ) ) .as ( [ Region , AverageofHappiness_Score ] ) | Group ( Region ) | With ( Panel ( 0 ) ) | Format ( type \u003d [ \u0027table\u0027 ] ) | TaskOptions ( { \"0\" : { \"layout\" : \"Cloud\" , \"alignment\" : { \"label\" : [ \"Region\" ] , \"value\" : [ \"AverageofHappiness_Score\" ] } } } ) | Collect ( 500 ) ;UnfilterFrame ( Region ) ;Frame ( ) | Select ( Region , Average ( Happiness_Score ) ) .as ( [ Region , AverageofHappiness_Score ] ) | Group ( Region ) | With ( Panel ( 0 ) ) | Format ( type \u003d [ \u0027table\u0027 ] ) | TaskOptions ( { \"0\" : { \"layout\" : \"Cloud\" , \"alignment\" : { \"label\" : [ \"Region\" ] , \"value\" : [ \"AverageofHappiness_Score\" ] } } } ) | Collect ( 500 ) ;UnfilterFrame ( Region ) ;Frame ( ) | Select ( Region , Average ( Happiness_Score ) ) .as ( [ Region , AverageofHappiness_Score ] ) | Group ( Region ) | With ( Panel ( 0 ) ) | Format ( type \u003d [ \u0027table\u0027 ] ) | TaskOptions ( { \"0\" : { \"layout\" : \"Cloud\" , \"alignment\" : { \"label\" : [ \"Region\" ] , \"value\" : [ \"AverageofHappiness_Score\" ] } } } ) | Collect ( 500 ) ;if ( ( HasDuplicates ( Country ) ) , ( Select ( Country , Average ( Happiness_Score ) ) .as ( [ Country , AverageofHappiness_Score ] ) | Group ( Country ) | With ( Panel ( 0 ) ) | Format ( type \u003d [ \u0027table\u0027 ] ) | TaskOptions ( { \"0\" : { \"layout\" : \"Cloud\" , \"alignment\" : { \"label\" : [ \"Country\" ] , \"value\" : [ \"AverageofHappiness_Score\" ] } } } ) | Collect ( 500 ) ) , ( Select ( Country , Happiness_Score ) .as ( [ Country , Happiness_Score ] ) | With ( Panel ( 0 ) ) | Format ( type \u003d [ \u0027table\u0027 ] ) | TaskOptions ( { \"0\" : { \"layout\" : \"Cloud\" , \"alignment\" : { \"label\" : [ \"Country\" ] , \"value\" : [ \"Happiness_Score\" ] } } } ) | Collect ( 500 ) ) ) ;Panel ( 0 ) | AddPanelOrnaments ( { \"tools\" : { \"shared\" : { \"colorName\" : \"Semoss\" , \"color\" : { \"AverageofHappiness Score\" : \"#4FA4DE\" } } } } ) ;Panel ( 0 ) | RetrievePanelOrnaments ( \"tools\" ) ;Panel ( 0 ) | AddPanelOrnaments ( { \"tools\" : { \"shared\" : { \"colorName\" : \"Four\" , \"color\" : { \"AverageofHappiness Score\" : \"#184D68\" } , \"backgroundColor\" : \"#FFFFFF\" } } } ) ;Panel ( 0 ) | RetrievePanelOrnaments ( \"tools\" ) ;if ( ( HasDuplicates ( Region ) ) , ( Select ( Region , Average ( Happiness_Score ) ) .as ( [ Region , AverageofHappiness_Score ] ) | Group ( Region ) | With ( Panel ( 0 ) ) | Format ( type \u003d [ \u0027table\u0027 ] ) | TaskOptions ( { \"0\" : { \"layout\" : \"Cloud\" , \"alignment\" : { \"label\" : [ \"Region\" ] , \"value\" : [ \"AverageofHappiness_Score\" ] } } } ) | Collect ( 500 ) ) , ( Select ( Region , Happiness_Score ) .as ( [ Region , Happiness_Score ] ) | With ( Panel ( 0 ) ) | Format ( type \u003d [ \u0027table\u0027 ] ) | TaskOptions ( { \"0\" : { \"layout\" : \"Cloud\" , \"alignment\" : { \"label\" : [ \"Region\" ] , \"value\" : [ \"Happiness_Score\" ] } } } ) | Collect ( 500 ) ) ) ;Panel ( 0 ) | AddPanelOrnaments ( { \"tools\" : { \"shared\" : { \"colorName\" : \"Four\" , \"color\" : { \"AverageofHappiness Score\" : \"#184D68\" } , \"backgroundColor\" : \"#FFFFFF\" } } } ) ;Panel ( 0 ) | RetrievePanelOrnaments ( \"tools\" ) ;Panel ( 0 ) | Clone ( 1 ) ;if ( ( HasDuplicates ( Region , Country ) ) , ( Select ( Region , Country , Average ( Economy_GDP_per_Capita ) ) .as ( [ Region , Country , AverageofEconomy_GDP_per_Capita ] ) | Group ( Region , Country ) | With ( Panel ( 1 ) ) | Format ( type \u003d [ \u0027table\u0027 ] ) | TaskOptions ( { \"1\" : { \"layout\" : \"TreeMap\" , \"alignment\" : { \"series\" : [ \"Region\" ] , \"label\" : [ \"Country\" ] , \"size\" : [ \"AverageofEconomy_GDP_per_Capita\" ] , \"facet\" : [ ] , \"tooltip\" : [ ] } } } ) | Collect ( 500 ) ) , ( Select ( Region , Country , Economy_GDP_per_Capita ) .as ( [ Region , Country , Economy_GDP_per_Capita ] ) | With ( Panel ( 1 ) ) | Format ( type \u003d [ \u0027table\u0027 ] ) | TaskOptions ( { \"1\" : { \"layout\" : \"TreeMap\" , \"alignment\" : { \"series\" : [ \"Region\" ] , \"label\" : [ \"Country\" ] , \"size\" : [ \"Economy_GDP_per_Capita\" ] , \"facet\" : [ ] , \"tooltip\" : [ ] } } } ) | Collect ( 500 ) ) ) ;if ( ( HasDuplicates ( Country ) ) , ( Select ( Country , Count ( Region ) , Average ( Economy_GDP_per_Capita ) ) .as ( [ Country , CountofRegion , AverageofEconomy_GDP_per_Capita ] ) | Group ( Country ) | With ( Panel ( 1 ) ) | Format ( type \u003d [ \u0027table\u0027 ] ) | TaskOptions ( { \"1\" : { \"layout\" : \"Line\" , \"alignment\" : { \"label\" : [ \"Country\" ] , \"value\" : [ \"CountofRegion\" , \"AverageofEconomy_GDP_per_Capita\" ] , \"facet\" : [ ] } } } ) | Collect ( 500 ) ) , ( Select ( Country , Count ( Region ) , Economy_GDP_per_Capita ) .as ( [ Country , CountofRegion , Economy_GDP_per_Capita ] ) | Group ( Country ) | With ( Panel ( 1 ) ) | Format ( type \u003d [ \u0027table\u0027 ] ) | TaskOptions ( { \"1\" : { \"layout\" : \"Line\" , \"alignment\" : { \"label\" : [ \"Country\" ] , \"value\" : [ \"CountofRegion\" , \"Economy_GDP_per_Capita\" ] , \"facet\" : [ ] } } } ) | Collect ( 500 ) ) ) ;if ( ( HasDuplicates ( Year ) ) , ( Select ( Year , Count ( Region ) , Average ( Economy_GDP_per_Capita ) ) .as ( [ Year , CountofRegion , AverageofEconomy_GDP_per_Capita ] ) | Group ( Year ) | With ( Panel ( 1 ) ) | Format ( type \u003d [ \u0027table\u0027 ] ) | TaskOptions ( { \"1\" : { \"layout\" : \"Line\" , \"alignment\" : { \"label\" : [ \"Year\" ] , \"value\" : [ \"CountofRegion\" , \"AverageofEconomy_GDP_per_Capita\" ] , \"facet\" : [ ] } } } ) | Collect ( 500 ) ) , ( Select ( Year , Count ( Region ) , Economy_GDP_per_Capita ) .as ( [ Year , CountofRegion , Economy_GDP_per_Capita ] ) | Group ( Year ) | With ( Panel ( 1 ) ) | Format ( type \u003d [ \u0027table\u0027 ] ) | TaskOptions ( { \"1\" : { \"layout\" : \"Line\" , \"alignment\" : { \"label\" : [ \"Year\" ] , \"value\" : [ \"CountofRegion\" , \"Economy_GDP_per_Capita\" ] , \"facet\" : [ ] } } } ) | Collect ( 500 ) ) ) ;if ( ( HasDuplicates ( Year ) ) , ( Select ( Year , Average ( Economy_GDP_per_Capita ) ) .as ( [ Year , AverageofEconomy_GDP_per_Capita ] ) | Group ( Year ) | With ( Panel ( 1 ) ) | Format ( type \u003d [ \u0027table\u0027 ] ) | TaskOptions ( { \"1\" : { \"layout\" : \"Line\" , \"alignment\" : { \"label\" : [ \"Year\" ] , \"value\" : [ \"AverageofEconomy_GDP_per_Capita\" ] , \"facet\" : [ ] } } } ) | Collect ( 500 ) ) , ( Select ( Year , Economy_GDP_per_Capita ) .as ( [ Year , Economy_GDP_per_Capita ] ) | With ( Panel ( 1 ) ) | Format ( type \u003d [ \u0027table\u0027 ] ) | TaskOptions ( { \"1\" : { \"layout\" : \"Line\" , \"alignment\" : { \"label\" : [ \"Year\" ] , \"value\" : [ \"Economy_GDP_per_Capita\" ] , \"facet\" : [ ] } } } ) | Collect ( 500 ) ) ) ;if ( ( HasDuplicates ( Year ) ) , ( Select ( Year , Count ( Country ) ) .as ( [ Year , CountofCountry ] ) | Group ( Year ) | With ( Panel ( 1 ) ) | Format ( type \u003d [ \u0027table\u0027 ] ) | TaskOptions ( { \"1\" : { \"layout\" : \"Line\" , \"alignment\" : { \"label\" : [ \"Year\" ] , \"value\" : [ \"CountofCountry\" ] , \"facet\" : [ ] } } } ) | Collect ( 500 ) ) , ( Select ( Year , Count ( Country ) ) .as ( [ Year , CountofCountry ] ) | Group ( Year ) | With ( Panel ( 1 ) ) | Format ( type \u003d [ \u0027table\u0027 ] ) | TaskOptions ( { \"1\" : { \"layout\" : \"Line\" , \"alignment\" : { \"label\" : [ \"Year\" ] , \"value\" : [ \"CountofCountry\" ] , \"facet\" : [ ] } } } ) | Collect ( 500 ) ) ) ;if ( ( HasDuplicates ( Year ) ) , ( Select ( Year , Count ( Country ) , Average ( Happiness_Rank ) ) .as ( [ Year , CountofCountry , AverageofHappiness_Rank ] ) | Group ( Year ) | With ( Panel ( 1 ) ) | Format ( type \u003d [ \u0027table\u0027 ] ) | TaskOptions ( { \"1\" : { \"layout\" : \"Line\" , \"alignment\" : { \"label\" : [ \"Year\" ] , \"value\" : [ \"CountofCountry\" , \"AverageofHappiness_Rank\" ] , \"facet\" : [ ] } } } ) | Collect ( 500 ) ) , ( Select ( Year , Count ( Country ) , Happiness_Rank ) .as ( [ Year , CountofCountry , Happiness_Rank ] ) | Group ( Year ) | With ( Panel ( 1 ) ) | Format ( type \u003d [ \u0027table\u0027 ] ) | TaskOptions ( { \"1\" : { \"layout\" : \"Line\" , \"alignment\" : { \"label\" : [ \"Year\" ] , \"value\" : [ \"CountofCountry\" , \"Happiness_Rank\" ] , \"facet\" : [ ] } } } ) | Collect ( 500 ) ) ) ;if ( ( HasDuplicates ( Year ) ) , ( Select ( Year , Average ( Happiness_Rank ) ) .as ( [ Year , AverageofHappiness_Rank ] ) | Group ( Year ) | With ( Panel ( 1 ) ) | Format ( type \u003d [ \u0027table\u0027 ] ) | TaskOptions ( { \"1\" : { \"layout\" : \"Line\" , \"alignment\" : { \"label\" : [ \"Year\" ] , \"value\" : [ \"AverageofHappiness_Rank\" ] , \"facet\" : [ ] } } } ) | Collect ( 500 ) ) , ( Select ( Year , Happiness_Rank ) .as ( [ Year , Happiness_Rank ] ) | With ( Panel ( 1 ) ) | Format ( type \u003d [ \u0027table\u0027 ] ) | TaskOptions ( { \"1\" : { \"layout\" : \"Line\" , \"alignment\" : { \"label\" : [ \"Year\" ] , \"value\" : [ \"Happiness_Rank\" ] , \"facet\" : [ ] } } } ) | Collect ( 500 ) ) ) ;if ( ( HasDuplicates ( Country ) ) , ( Select ( Country , Average ( Happiness_Rank ) ) .as ( [ Country , AverageofHappiness_Rank ] ) | Group ( Country ) | With ( Panel ( 1 ) ) | Format ( type \u003d [ \u0027table\u0027 ] ) | TaskOptions ( { \"1\" : { \"layout\" : \"Line\" , \"alignment\" : { \"label\" : [ \"Country\" ] , \"value\" : [ \"AverageofHappiness_Rank\" ] , \"facet\" : [ ] } } } ) | Collect ( 500 ) ) , ( Select ( Country , Happiness_Rank ) .as ( [ Country , Happiness_Rank ] ) | With ( Panel ( 1 ) ) | Format ( type \u003d [ \u0027table\u0027 ] ) | TaskOptions ( { \"1\" : { \"layout\" : \"Line\" , \"alignment\" : { \"label\" : [ \"Country\" ] , \"value\" : [ \"Happiness_Rank\" ] , \"facet\" : [ ] } } } ) | Collect ( 500 ) ) ) ;Select ( Region ) .as ( [ Region ] ) | With ( Panel ( 1 ) ) | Format ( type \u003d [ \u0027table\u0027 ] ) | TaskOptions ( { \"1\" : { \"layout\" : \"Dendrogram\" , \"alignment\" : { \"dimension\" : [ \"Region\" ] } } } ) | Collect ( 500 ) ;Select ( Region , Country ) .as ( [ Region , Country ] ) | With ( Panel ( 1 ) ) | Format ( type \u003d [ \u0027table\u0027 ] ) | TaskOptions ( { \"1\" : { \"layout\" : \"Dendrogram\" , \"alignment\" : { \"dimension\" : [ \"Region\" , \"Country\" ] } } } ) | Collect ( 500 ) ;Select ( Region ) .as ( [ Region ] ) | With ( Panel ( 1 ) ) | Format ( type \u003d [ \u0027table\u0027 ] ) | TaskOptions ( { \"1\" : { \"layout\" : \"Dendrogram\" , \"alignment\" : { \"dimension\" : [ \"Region\" ] } } } ) | Collect ( 500 ) ;Select ( Region , Family ) .as ( [ Region , Family ] ) | With ( Panel ( 1 ) ) | Format ( type \u003d [ \u0027table\u0027 ] ) | TaskOptions ( { \"1\" : { \"layout\" : \"Dendrogram\" , \"alignment\" : { \"dimension\" : [ \"Region\" , \"Family\" ] } } } ) | Collect ( 500 ) ;Select ( Region ) .as ( [ Region ] ) | With ( Panel ( 1 ) ) | Format ( type \u003d [ \u0027table\u0027 ] ) | TaskOptions ( { \"1\" : { \"layout\" : \"Dendrogram\" , \"alignment\" : { \"dimension\" : [ \"Region\" ] } } } ) | Collect ( 500 ) ;if ( ( HasDuplicates ( Country ) ) , ( Select ( Country , Average ( Family ) ) .as ( [ Country , AverageofFamily ] ) | Group ( Country ) | With ( Panel ( 1 ) ) | Format ( type \u003d [ \u0027table\u0027 ] ) | TaskOptions ( { \"1\" : { \"layout\" : \"Bubble\" , \"alignment\" : { \"label\" : [ \"Country\" ] , \"value\" : [ \"AverageofFamily\" ] } } } ) | Collect ( 500 ) ) , ( Select ( Country , Family ) .as ( [ Country , Family ] ) | With ( Panel ( 1 ) ) | Format ( type \u003d [ \u0027table\u0027 ] ) | TaskOptions ( { \"1\" : { \"layout\" : \"Bubble\" , \"alignment\" : { \"label\" : [ \"Country\" ] , \"value\" : [ \"Family\" ] } } } ) | Collect ( 500 ) ) ) ;if ( ( HasDuplicates ( Country ) ) , ( Select ( Country , Average ( Economy_GDP_per_Capita ) ) .as ( [ Country , AverageofEconomy_GDP_per_Capita ] ) | Group ( Country ) | With ( Panel ( 1 ) ) | Format ( type \u003d [ \u0027table\u0027 ] ) | TaskOptions ( { \"1\" : { \"layout\" : \"Bubble\" , \"alignment\" : { \"label\" : [ \"Country\" ] , \"value\" : [ \"AverageofEconomy_GDP_per_Capita\" ] } } } ) | Collect ( 500 ) ) , ( Select ( Country , Economy_GDP_per_Capita ) .as ( [ Country , Economy_GDP_per_Capita ] ) | With ( Panel ( 1 ) ) | Format ( type \u003d [ \u0027table\u0027 ] ) | TaskOptions ( { \"1\" : { \"layout\" : \"Bubble\" , \"alignment\" : { \"label\" : [ \"Country\" ] , \"value\" : [ \"Economy_GDP_per_Capita\" ] } } } ) | Collect ( 500 ) ) ) ;if ( ( HasDuplicates ( Country ) ) , ( Select ( Country , Average ( Economy_GDP_per_Capita ) ) .as ( [ Country , AverageofEconomy_GDP_per_Capita ] ) | Group ( Country ) | With ( Panel ( 1 ) ) | Format ( type \u003d [ \u0027table\u0027 ] ) | TaskOptions ( { \"1\" : { \"layout\" : \"Funnel\" , \"alignment\" : { \"label\" : [ \"Country\" ] , \"value\" : [ \"AverageofEconomy_GDP_per_Capita\" ] , \"facet\" : [ ] } } } ) | Collect ( 500 ) ) , ( Select ( Country , Economy_GDP_per_Capita ) .as ( [ Country , Economy_GDP_per_Capita ] ) | With ( Panel ( 1 ) ) | Format ( type \u003d [ \u0027table\u0027 ] ) | TaskOptions ( { \"1\" : { \"layout\" : \"Funnel\" , \"alignment\" : { \"label\" : [ \"Country\" ] , \"value\" : [ \"Economy_GDP_per_Capita\" ] , \"facet\" : [ ] } } } ) | Collect ( 500 ) ) ) ;if ( ( HasDuplicates ( Region ) ) , ( Select ( Region , Average ( Happiness_Score ) , Average ( Happiness_Rank ) ) .as ( [ Region , AverageofHappiness_Score , AverageofHappiness_Rank ] ) | Group ( Region ) | With ( Panel ( 1 ) ) | Format ( type \u003d [ \u0027table\u0027 ] ) | TaskOptions ( { \"1\" : { \"layout\" : \"Scatter\" , \"alignment\" : { \"label\" : [ \"Region\" ] , \"x\" : [ \"AverageofHappiness_Score\" ] , \"y\" : [ \"AverageofHappiness_Rank\" ] , \"z\" : [ ] , \"series\" : [ ] , \"facet\" : [ ] } } } ) | Collect ( 500 ) ) , ( Select ( Region , Happiness_Score , Happiness_Rank ) .as ( [ Region , Happiness_Score , Happiness_Rank ] ) | With ( Panel ( 1 ) ) | Format ( type \u003d [ \u0027table\u0027 ] ) | TaskOptions ( { \"1\" : { \"layout\" : \"Scatter\" , \"alignment\" : { \"label\" : [ \"Region\" ] , \"x\" : [ \"Happiness_Score\" ] , \"y\" : [ \"Happiness_Rank\" ] , \"z\" : [ ] , \"series\" : [ ] , \"facet\" : [ ] } } } ) | Collect ( 500 ) ) ) ;if ( ( HasDuplicates ( Region ) ) , ( Select ( Region , Average ( Happiness_Score ) , Average ( Happiness_Rank ) , UniqueGroupConcat ( Economy_GDP_per_Capita ) ) .as ( [ Region , AverageofHappiness_Score , AverageofHappiness_Rank , UniqueGroupConcatofEconomy_GDP_per_Capita ] ) | Group ( Region ) | With ( Panel ( 1 ) ) | Format ( type \u003d [ \u0027table\u0027 ] ) | TaskOptions ( { \"1\" : { \"layout\" : \"Scatter\" , \"alignment\" : { \"label\" : [ \"Region\" ] , \"x\" : [ \"AverageofHappiness_Score\" ] , \"y\" : [ \"AverageofHappiness_Rank\" ] , \"z\" : [ ] , \"series\" : [ \"UniqueGroupConcatofEconomy_GDP_per_Capita\" ] , \"facet\" : [ ] } } } ) | Collect ( 500 ) ) , ( Select ( Region , Happiness_Score , Happiness_Rank , Economy_GDP_per_Capita ) .as ( [ Region , Happiness_Score , Happiness_Rank , Economy_GDP_per_Capita ] ) | With ( Panel ( 1 ) ) | Format ( type \u003d [ \u0027table\u0027 ] ) | TaskOptions ( { \"1\" : { \"layout\" : \"Scatter\" , \"alignment\" : { \"label\" : [ \"Region\" ] , \"x\" : [ \"Happiness_Score\" ] , \"y\" : [ \"Happiness_Rank\" ] , \"z\" : [ ] , \"series\" : [ \"Economy_GDP_per_Capita\" ] , \"facet\" : [ ] } } } ) | Collect ( 500 ) ) ) ;if ( ( HasDuplicates ( Region ) ) , ( Select ( Region , Average ( Happiness_Score ) , Average ( Happiness_Rank ) ) .as ( [ Region , AverageofHappiness_Score , AverageofHappiness_Rank ] ) | Group ( Region ) | With ( Panel ( 1 ) ) | Format ( type \u003d [ \u0027table\u0027 ] ) | TaskOptions ( { \"1\" : { \"layout\" : \"Scatter\" , \"alignment\" : { \"label\" : [ \"Region\" ] , \"x\" : [ \"AverageofHappiness_Score\" ] , \"y\" : [ \"AverageofHappiness_Rank\" ] , \"z\" : [ ] , \"series\" : [ ] , \"facet\" : [ ] } } } ) | Collect ( 500 ) ) , ( Select ( Region , Happiness_Score , Happiness_Rank ) .as ( [ Region , Happiness_Score , Happiness_Rank ] ) | With ( Panel ( 1 ) ) | Format ( type \u003d [ \u0027table\u0027 ] ) | TaskOptions ( { \"1\" : { \"layout\" : \"Scatter\" , \"alignment\" : { \"label\" : [ \"Region\" ] , \"x\" : [ \"Happiness_Score\" ] , \"y\" : [ \"Happiness_Rank\" ] , \"z\" : [ ] , \"series\" : [ ] , \"facet\" : [ ] } } } ) | Collect ( 500 ) ) ) ;if ( ( HasDuplicates ( Region ) ) , ( Select ( Region , Average ( Happiness_Score ) , Average ( Happiness_Rank ) , Average ( Economy_GDP_per_Capita ) ) .as ( [ Region , AverageofHappiness_Score , AverageofHappiness_Rank , AverageofEconomy_GDP_per_Capita ] ) | Group ( Region ) | With ( Panel ( 1 ) ) | Format ( type \u003d [ \u0027table\u0027 ] ) | TaskOptions ( { \"1\" : { \"layout\" : \"Scatter\" , \"alignment\" : { \"label\" : [ \"Region\" ] , \"x\" : [ \"AverageofHappiness_Score\" ] , \"y\" : [ \"AverageofHappiness_Rank\" ] , \"z\" : [ \"AverageofEconomy_GDP_per_Capita\" ] , \"series\" : [ ] , \"facet\" : [ ] } } } ) | Collect ( 500 ) ) , ( Select ( Region , Happiness_Score , Happiness_Rank , Economy_GDP_per_Capita ) .as ( [ Region , Happiness_Score , Happiness_Rank , Economy_GDP_per_Capita ] ) | With ( Panel ( 1 ) ) | Format ( type \u003d [ \u0027table\u0027 ] ) | TaskOptions ( { \"1\" : { \"layout\" : \"Scatter\" , \"alignment\" : { \"label\" : [ \"Region\" ] , \"x\" : [ \"Happiness_Score\" ] , \"y\" : [ \"Happiness_Rank\" ] , \"z\" : [ \"Economy_GDP_per_Capita\" ] , \"series\" : [ ] , \"facet\" : [ ] } } } ) | Collect ( 500 ) ) ) ;if ( IsEmpty ( [ \"Sub-Saharan_Africa\" ] ) , UnfilterFrame ( Region ) , SetFrameFilter ( Region \u003d\u003d [ \"Sub-Saharan_Africa\" ] ) ) ;Frame ( ) | Select ( Region , Average ( Happiness_Score ) ) .as ( [ Region , AverageofHappiness_Score ] ) | Group ( Region ) | With ( Panel ( 0 ) ) | Format ( type \u003d [ \u0027table\u0027 ] ) | TaskOptions ( { \"0\" : { \"layout\" : \"Cloud\" , \"alignment\" : { \"label\" : [ \"Region\" ] , \"value\" : [ \"AverageofHappiness_Score\" ] } } } ) | Collect ( 500 ) ;Frame ( ) | Select ( Average ( Happiness_Score ) , Average ( Happiness_Rank ) , Average ( Economy_GDP_per_Capita ) , Region ) .as ( [ AverageofHappiness_Score , AverageofHappiness_Rank , AverageofEconomy_GDP_per_Capita , Region ] ) | Group ( Region ) | With ( Panel ( 1 ) ) | Format ( type \u003d [ \u0027table\u0027 ] ) | TaskOptions ( { \"1\" : { \"layout\" : \"Scatter\" , \"alignment\" : { \"x\" : [ \"AverageofHappiness_Score\" ] , \"y\" : [ \"AverageofHappiness_Rank\" ] , \"z\" : [ \"AverageofEconomy_GDP_per_Capita\" ] , \"label\" : [ \"Region\" ] } } } ) | Collect ( 500 ) ;Select ( Country , Dystopia_Residual , Economy_GDP_per_Capita , Family , Freedom , Generosity , HAPPYCSV , Happiness_Rank , Happiness_Score , Health_Life_Expectancy , Region , Standard_Error , Trust_Government_Corruption , Year ) .as ( [ Country , Dystopia_Residual , Economy_GDP_per_Capita , Family , Freedom , Generosity , HAPPYCSV , Happiness_Rank , Happiness_Score , Health_Life_Expectancy , Region , Standard_Error , Trust_Government_Corruption , Year ] ) | With ( Panel ( 1 ) ) | Format ( type \u003d [ \u0027table\u0027 ] ) | TaskOptions ( { \"1\" : { \"layout\" : \"Grid\" , \"alignment\" : { \"label\" : [ \"Country\" , \"Dystopia_Residual\" , \"Economy_GDP_per_Capita\" , \"Family\" , \"Freedom\" , \"Generosity\" , \"HAPPYCSV\" , \"Happiness_Rank\" , \"Happiness_Score\" , \"Health_Life_Expectancy\" , \"Region\" , \"Standard_Error\" , \"Trust_Government_Corruption\" , \"Year\" ] } } } ) | Collect ( 500 ) ;if ( ( HasDuplicates ( Country ) ) , ( Select ( Country , Average ( Dystopia_Residual ) , Average ( Economy_GDP_per_Capita ) , Average ( Family ) , Average ( Freedom ) , Average ( Generosity ) , Average ( HAPPYCSV ) , Average ( Happiness_Rank ) , Average ( Happiness_Score ) , Average ( Health_Life_Expectancy ) , Count ( Region ) , Average ( Standard_Error ) , Average ( Trust_Government_Corruption ) , Count ( Year ) ) .as ( [ Country , AverageofDystopia_Residual , AverageofEconomy_GDP_per_Capita , AverageofFamily , AverageofFreedom , AverageofGenerosity , AverageofHAPPYCSV , AverageofHappiness_Rank , AverageofHappiness_Score , AverageofHealth_Life_Expectancy , CountofRegion , AverageofStandard_Error , AverageofTrust_Government_Corruption , CountofYear ] ) | Group ( Country ) | With ( Panel ( 1 ) ) | Format ( type \u003d [ \u0027table\u0027 ] ) | TaskOptions ( { \"1\" : { \"layout\" : \"Column\" , \"alignment\" : { \"label\" : [ \"Country\" ] , \"value\" : [ \"AverageofDystopia_Residual\" , \"AverageofEconomy_GDP_per_Capita\" , \"AverageofFamily\" , \"AverageofFreedom\" , \"AverageofGenerosity\" , \"AverageofHAPPYCSV\" , \"AverageofHappiness_Rank\" , \"AverageofHappiness_Score\" , \"AverageofHealth_Life_Expectancy\" , \"CountofRegion\" , \"AverageofStandard_Error\" , \"AverageofTrust_Government_Corruption\" , \"CountofYear\" ] , \"facet\" : [ ] } } } ) | Collect ( 500 ) ) , ( Select ( Country , Dystopia_Residual , Economy_GDP_per_Capita , Family , Freedom , Generosity , HAPPYCSV , Happiness_Rank , Happiness_Score , Health_Life_Expectancy , Count ( Region ) , Standard_Error , Trust_Government_Corruption , Count ( Year ) ) .as ( [ Country , Dystopia_Residual , Economy_GDP_per_Capita , Family , Freedom , Generosity , HAPPYCSV , Happiness_Rank , Happiness_Score , Health_Life_Expectancy , CountofRegion , Standard_Error , Trust_Government_Corruption , CountofYear ] ) | Group ( Country ) | With ( Panel ( 1 ) ) | Format ( type \u003d [ \u0027table\u0027 ] ) | TaskOptions ( { \"1\" : { \"layout\" : \"Column\" , \"alignment\" : { \"label\" : [ \"Country\" ] , \"value\" : [ \"Dystopia_Residual\" , \"Economy_GDP_per_Capita\" , \"Family\" , \"Freedom\" , \"Generosity\" , \"HAPPYCSV\" , \"Happiness_Rank\" , \"Happiness_Score\" , \"Health_Life_Expectancy\" , \"CountofRegion\" , \"Standard_Error\" , \"Trust_Government_Corruption\" , \"CountofYear\" ] , \"facet\" : [ ] } } } ) | Collect ( 500 ) ) ) ;if ( ( HasDuplicates ( Year ) ) , ( Select ( Year , Average ( Family ) ) .as ( [ Year , AverageofFamily ] ) | Group ( Year ) | With ( Panel ( 1 ) ) | Format ( type \u003d [ \u0027table\u0027 ] ) | TaskOptions ( { \"1\" : { \"layout\" : \"Column\" , \"alignment\" : { \"label\" : [ \"Year\" ] , \"value\" : [ \"AverageofFamily\" ] , \"facet\" : [ ] } } } ) | Collect ( 500 ) ) , ( Select ( Year , Family ) .as ( [ Year , Family ] ) | With ( Panel ( 1 ) ) | Format ( type \u003d [ \u0027table\u0027 ] ) | TaskOptions ( { \"1\" : { \"layout\" : \"Column\" , \"alignment\" : { \"label\" : [ \"Year\" ] , \"value\" : [ \"Family\" ] , \"facet\" : [ ] } } } ) | Collect ( 500 ) ) ) ;if ( ( HasDuplicates ( Year ) ) , ( Select ( Year , Average ( Family ) , Average ( Freedom ) ) .as ( [ Year , AverageofFamily , AverageofFreedom ] ) | Group ( Year ) | With ( Panel ( 1 ) ) | Format ( type \u003d [ \u0027table\u0027 ] ) | TaskOptions ( { \"1\" : { \"layout\" : \"Column\" , \"alignment\" : { \"label\" : [ \"Year\" ] , \"value\" : [ \"AverageofFamily\" , \"AverageofFreedom\" ] , \"facet\" : [ ] } } } ) | Collect ( 500 ) ) , ( Select ( Year , Family , Freedom ) .as ( [ Year , Family , Freedom ] ) | With ( Panel ( 1 ) ) | Format ( type \u003d [ \u0027table\u0027 ] ) | TaskOptions ( { \"1\" : { \"layout\" : \"Column\" , \"alignment\" : { \"label\" : [ \"Year\" ] , \"value\" : [ \"Family\" , \"Freedom\" ] , \"facet\" : [ ] } } } ) | Collect ( 500 ) ) ) ;Panel ( 1 ) | AddPanelOrnaments ( { \"tools\" : { \"shared\" : { \"toggleLegend\" : true } } } ) ;Panel ( 1 ) | RetrievePanelOrnaments ( \"tools.shared.toggleLegend\" ) ;if ( ( HasDuplicates ( Country ) ) , ( Select ( Country , Average ( Happiness_Rank ) ) .as ( [ Country , AverageofHappiness_Rank ] ) | Group ( Country ) | With ( Panel ( 1 ) ) | Format ( type \u003d [ \u0027table\u0027 ] ) | TaskOptions ( { \"1\" : { \"layout\" : \"Line\" , \"alignment\" : { \"label\" : [ \"Country\" ] , \"value\" : [ \"AverageofHappiness_Rank\" ] , \"facet\" : [ ] } } } ) | Collect ( 500 ) ) , ( Select ( Country , Happiness_Rank ) .as ( [ Country , Happiness_Rank ] ) | With ( Panel ( 1 ) ) | Format ( type \u003d [ \u0027table\u0027 ] ) | TaskOptions ( { \"1\" : { \"layout\" : \"Line\" , \"alignment\" : { \"label\" : [ \"Country\" ] , \"value\" : [ \"Happiness_Rank\" ] , \"facet\" : [ ] } } } ) | Collect ( 500 ) ) ) ;if ( ( HasDuplicates ( Country ) ) , ( Select ( Country , Average ( Freedom ) ) .as ( [ Country , AverageofFreedom ] ) | Group ( Country ) | With ( Panel ( 1 ) ) | Format ( type \u003d [ \u0027table\u0027 ] ) | TaskOptions ( { \"1\" : { \"layout\" : \"Line\" , \"alignment\" : { \"label\" : [ \"Country\" ] , \"value\" : [ \"AverageofFreedom\" ] , \"facet\" : [ ] } } } ) | Collect ( 500 ) ) , ( Select ( Country , Freedom ) .as ( [ Country , Freedom ] ) | With ( Panel ( 1 ) ) | Format ( type \u003d [ \u0027table\u0027 ] ) | TaskOptions ( { \"1\" : { \"layout\" : \"Line\" , \"alignment\" : { \"label\" : [ \"Country\" ] , \"value\" : [ \"Freedom\" ] , \"facet\" : [ ] } } } ) | Collect ( 500 ) ) ) ;if ( ( HasDuplicates ( Country ) ) , ( Select ( Country , Average ( Freedom ) , Average ( Family ) ) .as ( [ Country , AverageofFreedom , AverageofFamily ] ) | Group ( Country ) | With ( Panel ( 1 ) ) | Format ( type \u003d [ \u0027table\u0027 ] ) | TaskOptions ( { \"1\" : { \"layout\" : \"Line\" , \"alignment\" : { \"label\" : [ \"Country\" ] , \"value\" : [ \"AverageofFreedom\" , \"AverageofFamily\" ] , \"facet\" : [ ] } } } ) | Collect ( 500 ) ) , ( Select ( Country , Freedom , Family ) .as ( [ Country , Freedom , Family ] ) | With ( Panel ( 1 ) ) | Format ( type \u003d [ \u0027table\u0027 ] ) | TaskOptions ( { \"1\" : { \"layout\" : \"Line\" , \"alignment\" : { \"label\" : [ \"Country\" ] , \"value\" : [ \"Freedom\" , \"Family\" ] , \"facet\" : [ ] } } } ) | Collect ( 500 ) ) ) ;if ( ( HasDuplicates ( Year ) ) , ( Select ( Year , Average ( Freedom ) , Average ( Family ) ) .as ( [ Year , AverageofFreedom , AverageofFamily ] ) | Group ( Year ) | With ( Panel ( 1 ) ) | Format ( type \u003d [ \u0027table\u0027 ] ) | TaskOptions ( { \"1\" : { \"layout\" : \"Line\" , \"alignment\" : { \"label\" : [ \"Year\" ] , \"value\" : [ \"AverageofFreedom\" , \"AverageofFamily\" ] , \"facet\" : [ ] } } } ) | Collect ( 500 ) ) , ( Select ( Year , Freedom , Family ) .as ( [ Year , Freedom , Family ] ) | With ( Panel ( 1 ) ) | Format ( type \u003d [ \u0027table\u0027 ] ) | TaskOptions ( { \"1\" : { \"layout\" : \"Line\" , \"alignment\" : { \"label\" : [ \"Year\" ] , \"value\" : [ \"Freedom\" , \"Family\" ] , \"facet\" : [ ] } } } ) | Collect ( 500 ) ) ) ;Panel ( 1 ) | AddPanelOrnaments ( { \"tools\" : { \"shared\" : { \"curveType\" : \"Exact\" } } } ) ;Panel ( 1 ) | RetrievePanelOrnaments ( \"tools.shared.curveType\" ) ;Panel ( 1 ) | AddPanelOrnaments ( { \"tools\" : { \"shared\" : { \"curveType\" : \"Exact\" } } } ) ;Panel ( 1 ) | RetrievePanelOrnaments ( \"tools.shared.curveType\" ) ;Panel ( 1 ) | AddPanelOrnaments ( { \"tools\" : { \"shared\" : { \"curveType\" : \"StepMiddle\" } } } ) ;Panel ( 1 ) | RetrievePanelOrnaments ( \"tools.shared.curveType\" ) ;Panel ( 1 ) | AddPanelOrnaments ( { \"tools\" : { \"shared\" : { \"curveType\" : \"StepStart\" } } } ) ;Panel ( 1 ) | RetrievePanelOrnaments ( \"tools.shared.curveType\" ) ;Panel ( 1 ) | AddPanelOrnaments ( { \"tools\" : { \"shared\" : { \"curveType\" : \"Smooth\" } } } ) ;Panel ( 1 ) | RetrievePanelOrnaments ( \"tools.shared.curveType\" ) ;if ( ( HasDuplicates ( Year ) ) , ( Select ( Year , Average ( Freedom ) , Average ( Family ) , Average ( Generosity ) ) .as ( [ Year , AverageofFreedom , AverageofFamily , AverageofGenerosity ] ) | Group ( Year ) | With ( Panel ( 1 ) ) | Format ( type \u003d [ \u0027table\u0027 ] ) | TaskOptions ( { \"1\" : { \"layout\" : \"Line\" , \"alignment\" : { \"label\" : [ \"Year\" ] , \"value\" : [ \"AverageofFreedom\" , \"AverageofFamily\" , \"AverageofGenerosity\" ] , \"facet\" : [ ] } } } ) | Collect ( 500 ) ) , ( Select ( Year , Freedom , Family , Generosity ) .as ( [ Year , Freedom , Family , Generosity ] ) | With ( Panel ( 1 ) ) | Format ( type \u003d [ \u0027table\u0027 ] ) | TaskOptions ( { \"1\" : { \"layout\" : \"Line\" , \"alignment\" : { \"label\" : [ \"Year\" ] , \"value\" : [ \"Freedom\" , \"Family\" , \"Generosity\" ] , \"facet\" : [ ] } } } ) | Collect ( 500 ) ) ) ;if ( ( HasDuplicates ( Year ) ) , ( Select ( Year , Average ( Freedom ) , Average ( Family ) , Average ( Generosity ) , Average ( Trust_Government_Corruption ) ) .as ( [ Year , AverageofFreedom , AverageofFamily , AverageofGenerosity , AverageofTrust_Government_Corruption ] ) | Group ( Year ) | With ( Panel ( 1 ) ) | Format ( type \u003d [ \u0027table\u0027 ] ) | TaskOptions ( { \"1\" : { \"layout\" : \"Line\" , \"alignment\" : { \"label\" : [ \"Year\" ] , \"value\" : [ \"AverageofFreedom\" , \"AverageofFamily\" , \"AverageofGenerosity\" , \"AverageofTrust_Government_Corruption\" ] , \"facet\" : [ ] } } } ) | Collect ( 500 ) ) , ( Select ( Year , Freedom , Family , Generosity , Trust_Government_Corruption ) .as ( [ Year , Freedom , Family , Generosity , Trust_Government_Corruption ] ) | With ( Panel ( 1 ) ) | Format ( type \u003d [ \u0027table\u0027 ] ) | TaskOptions ( { \"1\" : { \"layout\" : \"Line\" , \"alignment\" : { \"label\" : [ \"Year\" ] , \"value\" : [ \"Freedom\" , \"Family\" , \"Generosity\" , \"Trust_Government_Corruption\" ] , \"facet\" : [ ] } } } ) | Collect ( 500 ) ) ) ;UnfilterFrame ( Region ) ;Frame ( ) | Select ( Region , Average ( Happiness_Score ) ) .as ( [ Region , AverageofHappiness_Score ] ) | Group ( Region ) | With ( Panel ( 0 ) ) | Format ( type \u003d [ \u0027table\u0027 ] ) | TaskOptions ( { \"0\" : { \"layout\" : \"Cloud\" , \"alignment\" : { \"label\" : [ \"Region\" ] , \"value\" : [ \"AverageofHappiness_Score\" ] } } } ) | Collect ( 500 ) ;Frame ( ) | Select ( Year , Average ( Freedom ) , Average ( Family ) , Average ( Generosity ) , Average ( Trust_Government_Corruption ) ) .as ( [ Year , AverageofFreedom , AverageofFamily , AverageofGenerosity , AverageofTrust_Government_Corruption ] ) | Group ( Year ) | With ( Panel ( 1 ) ) | Format ( type \u003d [ \u0027table\u0027 ] ) | TaskOptions ( { \"1\" : { \"layout\" : \"Line\" , \"alignment\" : { \"label\" : [ \"Year\" ] , \"value\" : [ \"AverageofFreedom\" , \"AverageofFamily\" , \"AverageofGenerosity\" , \"AverageofTrust_Government_Corruption\" ] } } } ) | Collect ( 500 ) ;UnfilterFrame ( Region ) ;Frame ( ) | Select ( Region , Average ( Happiness_Score ) ) .as ( [ Region , AverageofHappiness_Score ] ) | Group ( Region ) | With ( Panel ( 0 ) ) | Format ( type \u003d [ \u0027table\u0027 ] ) | TaskOptions ( { \"0\" : { \"layout\" : \"Cloud\" , \"alignment\" : { \"label\" : [ \"Region\" ] , \"value\" : [ \"AverageofHappiness_Score\" ] } } } ) | Collect ( 500 ) ;Frame ( ) | Select ( Year , Average ( Freedom ) , Average ( Family ) , Average ( Generosity ) , Average ( Trust_Government_Corruption ) ) .as ( [ Year , AverageofFreedom , AverageofFamily , AverageofGenerosity , AverageofTrust_Government_Corruption ] ) | Group ( Year ) | With ( Panel ( 1 ) ) | Format ( type \u003d [ \u0027table\u0027 ] ) | TaskOptions ( { \"1\" : { \"layout\" : \"Line\" , \"alignment\" : { \"label\" : [ \"Year\" ] , \"value\" : [ \"AverageofFreedom\" , \"AverageofFamily\" , \"AverageofGenerosity\" , \"AverageofTrust_Government_Corruption\" ] } } } ) | Collect ( 500 ) ;UnfilterFrame ( Region ) ;Frame ( ) | Select ( Region , Average ( Happiness_Score ) ) .as ( [ Region , AverageofHappiness_Score ] ) | Group ( Region ) | With ( Panel ( 0 ) ) | Format ( type \u003d [ \u0027table\u0027 ] ) | TaskOptions ( { \"0\" : { \"layout\" : \"Cloud\" , \"alignment\" : { \"label\" : [ \"Region\" ] , \"value\" : [ \"AverageofHappiness_Score\" ] } } } ) | Collect ( 500 ) ;Frame ( ) | Select ( Year , Average ( Freedom ) , Average ( Family ) , Average ( Generosity ) , Average ( Trust_Government_Corruption ) ) .as ( [ Year , AverageofFreedom , AverageofFamily , AverageofGenerosity , AverageofTrust_Government_Corruption ] ) | Group ( Year ) | With ( Panel ( 1 ) ) | Format ( type \u003d [ \u0027table\u0027 ] ) | TaskOptions ( { \"1\" : { \"layout\" : \"Line\" , \"alignment\" : { \"label\" : [ \"Year\" ] , \"value\" : [ \"AverageofFreedom\" , \"AverageofFamily\" , \"AverageofGenerosity\" , \"AverageofTrust_Government_Corruption\" ] } } } ) | Collect ( 500 ) ;Select ( Happiness_Score , Region ) .as ( [ Happiness_Score , Region ] ) | With ( Panel ( 0 ) ) | Format ( type \u003d [ \u0027table\u0027 ] ) | TaskOptions ( { \"0\" : { \"layout\" : \"Cluster\" , \"alignment\" : { \"cluster\" : [ \"Happiness_Score\" ] , \"label\" : [ \"Region\" ] , \"tooltip\" : [ ] } } } ) | Collect ( 500 ) ;if ( ( HasDuplicates ( Region ) ) , ( Select ( Region , Average ( Happiness_Score ) ) .as ( [ Region , AverageofHappiness_Score ] ) | Group ( Region ) | With ( Panel ( 0 ) ) | Format ( type \u003d [ \u0027table\u0027 ] ) | TaskOptions ( { \"0\" : { \"layout\" : \"Bubble\" , \"alignment\" : { \"label\" : [ \"Region\" ] , \"value\" : [ \"AverageofHappiness_Score\" ] } } } ) | Collect ( 500 ) ) , ( Select ( Region , Happiness_Score ) .as ( [ Region , Happiness_Score ] ) | With ( Panel ( 0 ) ) | Format ( type \u003d [ \u0027table\u0027 ] ) | TaskOptions ( { \"0\" : { \"layout\" : \"Bubble\" , \"alignment\" : { \"label\" : [ \"Region\" ] , \"value\" : [ \"Happiness_Score\" ] } } } ) | Collect ( 500 ) ) ) ;if ( ( HasDuplicates ( Region ) ) , ( Select ( Region , Average ( Happiness_Score ) ) .as ( [ Region , AverageofHappiness_Score ] ) | Group ( Region ) | With ( Panel ( 0 ) ) | Format ( type \u003d [ \u0027table\u0027 ] ) | TaskOptions ( { \"0\" : { \"layout\" : \"Bubble\" , \"alignment\" : { \"label\" : [ \"Region\" ] , \"value\" : [ \"AverageofHappiness_Score\" ] } } } ) | Collect ( 500 ) ) , ( Select ( Region , Happiness_Score ) .as ( [ Region , Happiness_Score ] ) | With ( Panel ( 0 ) ) | Format ( type \u003d [ \u0027table\u0027 ] ) | TaskOptions ( { \"0\" : { \"layout\" : \"Bubble\" , \"alignment\" : { \"label\" : [ \"Region\" ] , \"value\" : [ \"Happiness_Score\" ] } } } ) | Collect ( 500 ) ) ) ;if ( ( HasDuplicates ( Region ) ) , ( Select ( Region , Average ( Happiness_Rank ) ) .as ( [ Region , AverageofHappiness_Rank ] ) | Group ( Region ) | With ( Panel ( 0 ) ) | Format ( type \u003d [ \u0027table\u0027 ] ) | TaskOptions ( { \"0\" : { \"layout\" : \"Bubble\" , \"alignment\" : { \"label\" : [ \"Region\" ] , \"value\" : [ \"AverageofHappiness_Rank\" ] } } } ) | Collect ( 500 ) ) , ( Select ( Region , Happiness_Rank ) .as ( [ Region , Happiness_Rank ] ) | With ( Panel ( 0 ) ) | Format ( type \u003d [ \u0027table\u0027 ] ) | TaskOptions ( { \"0\" : { \"layout\" : \"Bubble\" , \"alignment\" : { \"label\" : [ \"Region\" ] , \"value\" : [ \"Happiness_Rank\" ] } } } ) | Collect ( 500 ) ) ) ;Panel ( 0 ) | AddPanelOrnaments ( { \"tools\" : { \"shared\" : { \"toggleLegend\" : true } } } ) ;Panel ( 0 ) | RetrievePanelOrnaments ( \"tools.shared.toggleLegend\" ) ;if ( ( HasDuplicates ( Country , Region ) ) , ( Select ( Country , Region , Average ( Happiness_Rank ) ) .as ( [ Country , Region , AverageofHappiness_Rank ] ) | Group ( Country , Region ) | With ( Panel ( 0 ) ) | Format ( type \u003d [ \u0027table\u0027 ] ) | TaskOptions ( { \"0\" : { \"layout\" : \"TreeMap\" , \"alignment\" : { \"series\" : [ \"Country\" ] , \"label\" : [ \"Region\" ] , \"size\" : [ \"AverageofHappiness_Rank\" ] , \"facet\" : [ ] , \"tooltip\" : [ ] } } } ) | Collect ( 500 ) ) , ( Select ( Country , Region , Happiness_Rank ) .as ( [ Country , Region , Happiness_Rank ] ) | With ( Panel ( 0 ) ) | Format ( type \u003d [ \u0027table\u0027 ] ) | TaskOptions ( { \"0\" : { \"layout\" : \"TreeMap\" , \"alignment\" : { \"series\" : [ \"Country\" ] , \"label\" : [ \"Region\" ] , \"size\" : [ \"Happiness_Rank\" ] , \"facet\" : [ ] , \"tooltip\" : [ ] } } } ) | Collect ( 500 ) ) ) ;if ( ( HasDuplicates ( Region , Standard_Error ) ) , ( Select ( Region , Standard_Error , Average ( Happiness_Rank ) ) .as ( [ Region , Standard_Error , AverageofHappiness_Rank ] ) | Group ( Region , Standard_Error ) | With ( Panel ( 0 ) ) | Format ( type \u003d [ \u0027table\u0027 ] ) | TaskOptions ( { \"0\" : { \"layout\" : \"TreeMap\" , \"alignment\" : { \"series\" : [ \"Region\" ] , \"label\" : [ \"Standard_Error\" ] , \"size\" : [ \"AverageofHappiness_Rank\" ] , \"facet\" : [ ] , \"tooltip\" : [ ] } } } ) | Collect ( 500 ) ) , ( Select ( Region , Standard_Error , Happiness_Rank ) .as ( [ Region , Standard_Error , Happiness_Rank ] ) | With ( Panel ( 0 ) ) | Format ( type \u003d [ \u0027table\u0027 ] ) | TaskOptions ( { \"0\" : { \"layout\" : \"TreeMap\" , \"alignment\" : { \"series\" : [ \"Region\" ] , \"label\" : [ \"Standard_Error\" ] , \"size\" : [ \"Happiness_Rank\" ] , \"facet\" : [ ] , \"tooltip\" : [ ] } } } ) | Collect ( 500 ) ) ) ;Select ( Region ) .as ( [ Region ] ) | With ( Panel ( 0 ) ) | Format ( type \u003d [ \u0027graph\u0027 ] , options \u003d [ { \"connections\" : \"\" } ] ) | TaskOptions ( { \"0\" : { \"layout\" : \"Graph\" , \"alignment\" : { \"start\" : [ \"Region\" ] , \"end\" : [ ] , \"facet\" : [ ] } } } ) | Collect ( 500 ) ;Select ( Region , Happiness_Rank ) .as ( [ Region , Happiness_Rank ] ) | With ( Panel ( 0 ) ) | Format ( type \u003d [ \u0027graph\u0027 ] , options \u003d [ { \"connections\" : \"Region.Happiness_Rank;\" } ] ) | TaskOptions ( { \"0\" : { \"layout\" : \"Graph\" , \"alignment\" : { \"start\" : [ \"Region\" ] , \"end\" : [ \"Happiness_Rank\" ] , \"facet\" : [ ] } } } ) | Collect ( 500 ) ;Select ( Region , Happiness_Rank ) .as ( [ Region , Happiness_Rank ] ) | With ( Panel ( 0 ) ) | Format ( type \u003d [ \u0027table\u0027 ] ) | TaskOptions ( { \"0\" : { \"layout\" : \"Dendrogram\" , \"alignment\" : { \"dimension\" : [ \"Region\" , \"Happiness_Rank\" ] } } } ) | Collect ( 500 ) ;Select ( Region ) .as ( [ Region ] ) | With ( Panel ( 0 ) ) | Format ( type \u003d [ \u0027table\u0027 ] ) | TaskOptions ( { \"0\" : { \"layout\" : \"Dendrogram\" , \"alignment\" : { \"dimension\" : [ \"Region\" ] } } } ) | Collect ( 500 ) ;if ( ( HasDuplicates ( Region ) ) , ( Select ( Region , Average ( Happiness_Rank ) ) .as ( [ Region , AverageofHappiness_Rank ] ) | Group ( Region ) | With ( Panel ( 0 ) ) | Format ( type \u003d [ \u0027table\u0027 ] ) | TaskOptions ( { \"0\" : { \"layout\" : \"Sankey\" , \"alignment\" : { \"label\" : [ \"Region\" ] , \"value\" : [ \"AverageofHappiness_Rank\" ] , \"facet\" : [ ] } } } ) | Collect ( 500 ) ) , ( Select ( Region , Happiness_Rank ) .as ( [ Region , Happiness_Rank ] ) | With ( Panel ( 0 ) ) | Format ( type \u003d [ \u0027table\u0027 ] ) | TaskOptions ( { \"0\" : { \"layout\" : \"Sankey\" , \"alignment\" : { \"label\" : [ \"Region\" ] , \"value\" : [ \"Happiness_Rank\" ] , \"facet\" : [ ] } } } ) | Collect ( 500 ) ) ) ;if ( ( HasDuplicates ( Region ) ) , ( Select ( Region , Average ( Happiness_Score ) ) .as ( [ Region , AverageofHappiness_Score ] ) | Group ( Region ) | With ( Panel ( 0 ) ) | Format ( type \u003d [ \u0027table\u0027 ] ) | TaskOptions ( { \"0\" : { \"layout\" : \"Cloud\" , \"alignment\" : { \"label\" : [ \"Region\" ] , \"value\" : [ \"AverageofHappiness_Score\" ] } } } ) | Collect ( 500 ) ) , ( Select ( Region , Happiness_Score ) .as ( [ Region , Happiness_Score ] ) | With ( Panel ( 0 ) ) | Format ( type \u003d [ \u0027table\u0027 ] ) | TaskOptions ( { \"0\" : { \"layout\" : \"Cloud\" , \"alignment\" : { \"label\" : [ \"Region\" ] , \"value\" : [ \"Happiness_Score\" ] } } } ) | Collect ( 500 ) ) ) ;UnfilterFrame ( Region ) ;Frame ( ) | Select ( Region , Average ( Happiness_Score ) ) .as ( [ Region , AverageofHappiness_Score ] ) | Group ( Region ) | With ( Panel ( 0 ) ) | Format ( type \u003d [ \u0027table\u0027 ] ) | TaskOptions ( { \"0\" : { \"layout\" : \"Cloud\" , \"alignment\" : { \"label\" : [ \"Region\" ] , \"value\" : [ \"AverageofHappiness_Score\" ] } } } ) | Collect ( 500 ) ;Frame ( ) | Select ( Year , Average ( Freedom ) , Average ( Family ) , Average ( Generosity ) , Average ( Trust_Government_Corruption ) ) .as ( [ Year , AverageofFreedom , AverageofFamily , AverageofGenerosity , AverageofTrust_Government_Corruption ] ) | Group ( Year ) | With ( Panel ( 1 ) ) | Format ( type \u003d [ \u0027table\u0027 ] ) | TaskOptions ( { \"1\" : { \"layout\" : \"Line\" , \"alignment\" : { \"label\" : [ \"Year\" ] , \"value\" : [ \"AverageofFreedom\" , \"AverageofFamily\" , \"AverageofGenerosity\" , \"AverageofTrust_Government_Corruption\" ] } } } ) | Collect ( 500 ) ;UnfilterFrame ( ) ;Frame ( ) | Select ( Region , Average ( Happiness_Score ) ) .as ( [ Region , AverageofHappiness_Score ] ) | Group ( Region ) | With ( Panel ( 0 ) ) | Format ( type \u003d [ \u0027table\u0027 ] ) | TaskOptions ( { \"0\" : { \"layout\" : \"Cloud\" , \"alignment\" : { \"label\" : [ \"Region\" ] , \"value\" : [ \"AverageofHappiness_Score\" ] } } } ) | Collect ( 500 ) ;if ( ( HasDuplicates ( Region ) ) , ( Select ( Region , Average ( Happiness_Score ) ) .as ( [ Region , AverageofHappiness_Score ] ) | Group ( Region ) | With ( Panel ( 0 ) ) | Format ( type \u003d [ \u0027table\u0027 ] ) | TaskOptions ( { \"0\" : { \"layout\" : \"SingleAxisCluster\" , \"alignment\" : { \"label\" : [ \"Region\" ] , \"x\" : [ \"AverageofHappiness_Score\" ] , \"size\" : [ ] , \"facet\" : [ ] , \"tooltip\" : [ ] } } } ) | Collect ( 500 ) ) , ( Select ( Region , Happiness_Score ) .as ( [ Region , Happiness_Score ] ) | With ( Panel ( 0 ) ) | Format ( type \u003d [ \u0027table\u0027 ] ) | TaskOptions ( { \"0\" : { \"layout\" : \"SingleAxisCluster\" , \"alignment\" : { \"label\" : [ \"Region\" ] , \"x\" : [ \"Happiness_Score\" ] , \"size\" : [ ] , \"facet\" : [ ] , \"tooltip\" : [ ] } } } ) | Collect ( 500 ) ) ) ;Select ( Region , Happiness_Score ) .as ( [ Region , Happiness_Score ] ) | With ( Panel ( 0 ) ) | Format ( type \u003d [ \u0027table\u0027 ] ) | TaskOptions ( { \"0\" : { \"layout\" : \"ParallelCoordinates\" , \"alignment\" : { \"dimension\" : [ \"Region\" , \"Happiness_Score\" ] , \"series\" : [ ] , \"facet\" : [ ] } } } ) | Collect ( 500 ) ;Select ( Region ) .as ( [ Region ] ) | With ( Panel ( 0 ) ) | Format ( type \u003d [ \u0027table\u0027 ] ) | TaskOptions ( { \"0\" : { \"layout\" : \"ParallelCoordinates\" , \"alignment\" : { \"dimension\" : [ \"Region\" ] , \"series\" : [ ] , \"facet\" : [ ] } } } ) | Collect ( 500 ) ;Select ( Region , Happiness_Rank ) .as ( [ Region , Happiness_Rank ] ) | With ( Panel ( 0 ) ) | Format ( type \u003d [ \u0027table\u0027 ] ) | TaskOptions ( { \"0\" : { \"layout\" : \"ParallelCoordinates\" , \"alignment\" : { \"dimension\" : [ \"Region\" ] , \"series\" : [ \"Happiness_Rank\" ] , \"facet\" : [ ] } } } ) | Collect ( 500 ) ;Panel ( 0 ) | AddPanelOrnaments ( { \"tools\" : { \"individual\" : { \"ParallelCoordinates\" : { \"smoothLine\" : true } } } } ) ;Panel ( 0 ) | RetrievePanelOrnaments ( \"tools\" ) ;Panel ( 0 ) | AddPanelOrnaments ( { \"tools\" : { \"shared\" : { \"rotateAxis\" : true } } } ) ;Panel ( 0 ) | RetrievePanelOrnaments ( \"tools.shared.rotateAxis\" ) ;Panel ( 0 ) | AddPanelOrnaments ( { \"tools\" : { \"individual\" : { \"ParallelCoordinates\" : { \"heightFitToScreen\" : true } } } } ) ;Panel ( 0 ) | RetrievePanelOrnaments ( \"tools\" ) ;Panel ( 0 ) | AddPanelOrnaments ( { \"tools\" : { \"individual\" : { \"ParallelCoordinates\" : { \"heightFitToScreen\" : false } } } } ) ;Panel ( 0 ) | RetrievePanelOrnaments ( \"tools\" ) ;Panel ( 0 ) | AddPanelOrnaments ( { \"tools\" : { \"individual\" : { \"ParallelCoordinates\" : { \"count\" : false } } } } ) ;Panel ( 0 ) | RetrievePanelOrnaments ( \"tools\" ) ;Panel ( 0 ) | AddPanelOrnaments ( { \"tools\" : { \"individual\" : { \"ParallelCoordinates\" : { \"count\" : false } } } } ) ;Panel ( 0 ) | RetrievePanelOrnaments ( \"tools\" ) ;if ( ( HasDuplicates ( Year ) ) , ( Select ( Year , Average ( Freedom ) , Average ( Family ) , Average ( Generosity ) , Average ( Trust_Government_Corruption ) , Average ( Economy_GDP_per_Capita ) ) .as ( [ Year , AverageofFreedom , AverageofFamily , AverageofGenerosity , AverageofTrust_Government_Corruption , AverageofEconomy_GDP_per_Capita ] ) | Group ( Year ) | With ( Panel ( 1 ) ) | Format ( type \u003d [ \u0027table\u0027 ] ) | TaskOptions ( { \"1\" : { \"layout\" : \"Line\" , \"alignment\" : { \"label\" : [ \"Year\" ] , \"value\" : [ \"AverageofFreedom\" , \"AverageofFamily\" , \"AverageofGenerosity\" , \"AverageofTrust_Government_Corruption\" , \"AverageofEconomy_GDP_per_Capita\" ] , \"facet\" : [ ] } } } ) | Collect ( 500 ) ) , ( Select ( Year , Freedom , Family , Generosity , Trust_Government_Corruption , Economy_GDP_per_Capita ) .as ( [ Year , Freedom , Family , Generosity , Trust_Government_Corruption , Economy_GDP_per_Capita ] ) | With ( Panel ( 1 ) ) | Format ( type \u003d [ \u0027table\u0027 ] ) | TaskOptions ( { \"1\" : { \"layout\" : \"Line\" , \"alignment\" : { \"label\" : [ \"Year\" ] , \"value\" : [ \"Freedom\" , \"Family\" , \"Generosity\" , \"Trust_Government_Corruption\" , \"Economy_GDP_per_Capita\" ] , \"facet\" : [ ] } } } ) | Collect ( 500 ) ) ) ;if ( ( HasDuplicates ( Year ) ) , ( Select ( Year , Average ( Freedom ) , Average ( Family ) , Average ( Generosity ) , Average ( Trust_Government_Corruption ) ) .as ( [ Year , AverageofFreedom , AverageofFamily , AverageofGenerosity , AverageofTrust_Government_Corruption ] ) | Group ( Year ) | With ( Panel ( 1 ) ) | Format ( type \u003d [ \u0027table\u0027 ] ) | TaskOptions ( { \"1\" : { \"layout\" : \"Line\" , \"alignment\" : { \"label\" : [ \"Year\" ] , \"value\" : [ \"AverageofFreedom\" , \"AverageofFamily\" , \"AverageofGenerosity\" , \"AverageofTrust_Government_Corruption\" ] , \"facet\" : [ ] } } } ) | Collect ( 500 ) ) , ( Select ( Year , Freedom , Family , Generosity , Trust_Government_Corruption ) .as ( [ Year , Freedom , Family , Generosity , Trust_Government_Corruption ] ) | With ( Panel ( 1 ) ) | Format ( type \u003d [ \u0027table\u0027 ] ) | TaskOptions ( { \"1\" : { \"layout\" : \"Line\" , \"alignment\" : { \"label\" : [ \"Year\" ] , \"value\" : [ \"Freedom\" , \"Family\" , \"Generosity\" , \"Trust_Government_Corruption\" ] , \"facet\" : [ ] } } } ) | Collect ( 500 ) ) ) ;Panel ( 1 ) | AddPanelOrnaments ( { \"tools\" : { \"shared\" : { \"toggleExtremes\" : true } } } ) ;Panel ( 1 ) | RetrievePanelOrnaments ( \"tools.shared.toggleExtremes\" ) ;Panel ( 1 ) | AddPanelOrnaments ( { \"tools\" : { \"shared\" : { \"toggleExtremes\" : false } } } ) ;Panel ( 1 ) | RetrievePanelOrnaments ( \"tools.shared.toggleExtremes\" ) ;Panel ( 1 ) | AddPanelOrnaments ( { \"tools\" : { \"shared\" : { \"toggleGrid\" : true } } } ) ;Panel ( 1 ) | RetrievePanelOrnaments ( \"tools.shared.toggleGrid\" ) ;Panel ( 1 ) | AddPanelOrnaments ( { \"tools\" : { \"shared\" : { \"toggleAverage\" : true } } } ) ;Panel ( 1 ) | RetrievePanelOrnaments ( \"tools.shared.toggleAverage\" ) ;Panel(0)|AddPanelOrnaments({\"showMenu\":true});Panel(0)|RetrievePanelOrnaments(\"showMenu\");Panel(1)|AddPanelOrnaments({\"showMenu\":true});Panel(1)|RetrievePanelOrnaments(\"showMenu\");"
}
{
  "layout": "Grid",
  "rdbmsId": "00a57569-2b24-4d42-9048-7504b1f44ec2",
  "hidden": false,
  "engine": "happyDB",
  "insightName": "Data_With_Inverse",
  "recipe": "AddPanel ( 0 ) ;Panel ( 0 ) | AddPanelEvents ( { \"onSingleClick\" : { \"Unfilter\" : [ { \"panel\" : \"\" , \"query\" : \"\u003cencode\u003eUnfilterFrame(\u003cSelectedColumn\u003e);\u003c/encode\u003e\" , \"options\" : { } , \"refresh\" : true , \"default\" : true , \"disabledVisuals\" : [ \"Grid\" ] , \"disabled\" : false } ] } , \"onBrush\" : { \"Filter\" : [ { \"panel\" : \"\" , \"query\" : \"\u003cencode\u003eif(IsEmpty(\u003cSelectedValues\u003e), UnfilterFrame(\u003cSelectedColumn\u003e), SetFrameFilter(\u003cSelectedColumn\u003e\u003d\u003d\u003cSelectedValues\u003e));\u003c/encode\u003e\" , \"options\" : { } , \"refresh\" : true , \"default\" : true , \"disabled\" : false } ] } } ) ;Panel ( 0 ) | RetrievePanelEvents ( ) ;Panel ( 0 ) | SetPanelView ( \"visualization\" , \"\u003cencode\u003e{\"type\":\"echarts\"}\u003c/encode\u003e\" ) ;Panel ( 0 ) | SetPanelView ( \"federate-view\" , \"\u003cencode\u003e{\"core_engine\":\"happyDB\"}\u003c/encode\u003e\" ) ;CreateFrame ( grid ) .as ( [ \u0027FRAME897205\u0027 ] ) ;Database ( happyDB ) | Select ( HAPPYCSV , HAPPYCSV__Country , HAPPYCSV__Dystopia_Residual , HAPPYCSV__Economy_GDP_per_Capita , HAPPYCSV__Family , HAPPYCSV__Freedom , HAPPYCSV__Generosity , HAPPYCSV__Happiness_Rank , HAPPYCSV__Happiness_Score , HAPPYCSV__Health_Life_Expectancy , HAPPYCSV__Region , HAPPYCSV__Standard_Error , HAPPYCSV__Trust_Government_Corruption , HAPPYCSV__Year ) .as ( [ HAPPYCSV , Country , Dystopia_Residual , Economy_GDP_per_Capita , Family , Freedom , Generosity , Happiness_Rank , Happiness_Score , Health_Life_Expectancy , Region , Standard_Error , Trust_Government_Corruption , Year ] ) | Import ( ) ;Panel ( 0 ) | SetPanelView ( \"visualization\" ) ;Panel ( 0 ) | SetPanelView ( \"visualization\" ) ;Frame ( ) | Select ( Country , Dystopia_Residual , Economy_GDP_per_Capita , Family , Freedom , Generosity , HAPPYCSV , Happiness_Rank , Happiness_Score , Health_Life_Expectancy , Region , Standard_Error , Trust_Government_Corruption , Year ) .as ( [ Country , Dystopia_Residual , Economy_GDP_per_Capita , Family , Freedom , Generosity , HAPPYCSV , Happiness_Rank , Happiness_Score , Health_Life_Expectancy , Region , Standard_Error , Trust_Government_Corruption , Year ] ) | With ( Panel ( 0 ) ) | Format ( type \u003d [ \u0027table\u0027 ] ) | TaskOptions ( { \"0\" : { \"layout\" : \"Grid\" , \"alignment\" : { \"label\" : [ \"Country\" , \"Dystopia_Residual\" , \"Economy_GDP_per_Capita\" , \"Family\" , \"Freedom\" , \"Generosity\" , \"HAPPYCSV\" , \"Happiness_Rank\" , \"Happiness_Score\" , \"Health_Life_Expectancy\" , \"Region\" , \"Standard_Error\" , \"Trust_Government_Corruption\" , \"Year\" ] } } } ) | Collect ( 500 ) ;\u003cj\u003e\u003cencode\u003esynchronizeGridToRDataTable(\"FRAME897205\")\u003c/encode\u003e\u003c/j\u003e ;Frame ( ) | Select ( Country , Dystopia_Residual , Economy_GDP_per_Capita , Family , Freedom , Generosity , Happiness_Rank , Happiness_Score , HAPPYCSV , Health_Life_Expectancy , Region , Standard_Error , Trust_Government_Corruption , Year ) .as ( [ Country , Dystopia_Residual , Economy_GDP_per_Capita , Family , Freedom , Generosity , Happiness_Rank , Happiness_Score , HAPPYCSV , Health_Life_Expectancy , Region , Standard_Error , Trust_Government_Corruption , Year ] ) | Format ( type \u003d [ \u0027table\u0027 ] ) | TaskOptions ( { \"0\" : { \"layout\" : \"Grid\" , \"alignment\" : { \"label\" : [ \"Country\" , \"Dystopia_Residual\" , \"Economy_GDP_per_Capita\" , \"Family\" , \"Freedom\" , \"Generosity\" , \"Happiness_Rank\" , \"Happiness_Score\" , \"HAPPYCSV\" , \"Health_Life_Expectancy\" , \"Region\" , \"Standard_Error\" , \"Trust_Government_Corruption\" , \"Year\" ] } } } ) | Collect ( 500 ) ;DropRows ( Filter ( Year \u003d\u003d \"2015\" ) ) ;Frame ( ) | Select ( Country , Dystopia_Residual , Economy_GDP_per_Capita , Family , Freedom , Generosity , Happiness_Rank , Happiness_Score , HAPPYCSV , Health_Life_Expectancy , Region , Standard_Error , Trust_Government_Corruption , Year ) .as ( [ Country , Dystopia_Residual , Economy_GDP_per_Capita , Family , Freedom , Generosity , Happiness_Rank , Happiness_Score , HAPPYCSV , Health_Life_Expectancy , Region , Standard_Error , Trust_Government_Corruption , Year ] ) | With ( Panel ( 0 ) ) | Format ( type \u003d [ \u0027table\u0027 ] ) | TaskOptions ( { \"0\" : { \"layout\" : \"Grid\" , \"alignment\" : { \"label\" : [ \"Country\" , \"Dystopia_Residual\" , \"Economy_GDP_per_Capita\" , \"Family\" , \"Freedom\" , \"Generosity\" , \"Happiness_Rank\" , \"Happiness_Score\" , \"HAPPYCSV\" , \"Health_Life_Expectancy\" , \"Region\" , \"Standard_Error\" , \"Trust_Government_Corruption\" , \"Year\" ] } } } ) | Collect ( 500 ) ;Select ( ( ( 158 - Happiness_Rank ) + 1 ) , Happiness_Rank ) .as ( [ Inverse_Rank , Happiness_Rank ] ) | Merge ( ( Happiness_Rank , inner.join , Happiness_Rank ) ) ;Frame ( ) | Select ( Country , Dystopia_Residual , Economy_GDP_per_Capita , Family , Freedom , Generosity , Happiness_Rank , Happiness_Score , HAPPYCSV , Health_Life_Expectancy , Region , Standard_Error , Trust_Government_Corruption , Year , Inverse_Rank ) .as ( [ Country , Dystopia_Residual , Economy_GDP_per_Capita , Family , Freedom , Generosity , Happiness_Rank , Happiness_Score , HAPPYCSV , Health_Life_Expectancy , Region , Standard_Error , Trust_Government_Corruption , Year , Inverse_Rank ] ) | With ( Panel ( 0 ) ) | Format ( type \u003d [ \u0027table\u0027 ] ) | TaskOptions ( { \"0\" : { \"layout\" : \"Grid\" , \"alignment\" : { \"label\" : [ \"Country\" , \"Dystopia_Residual\" , \"Economy_GDP_per_Capita\" , \"Family\" , \"Freedom\" , \"Generosity\" , \"Happiness_Rank\" , \"Happiness_Score\" , \"HAPPYCSV\" , \"Health_Life_Expectancy\" , \"Region\" , \"Standard_Error\" , \"Trust_Government_Corruption\" , \"Year\" , \"Inverse_Rank\" ] } } } ) | Collect ( 500 ) ;Frame ( ) | Select ( Country , Dystopia_Residual , Economy_GDP_per_Capita , Family , Freedom , Generosity , Happiness_Rank , Happiness_Score , HAPPYCSV , Health_Life_Expectancy , Inverse_Rank , Region , Standard_Error , Trust_Government_Corruption , Year ) .as ( [ Country , Dystopia_Residual , Economy_GDP_per_Capita , Family , Freedom , Generosity , Happiness_Rank , Happiness_Score , HAPPYCSV , Health_Life_Expectancy , Inverse_Rank , Region , Standard_Error , Trust_Government_Corruption , Year ] ) | Format ( type \u003d [ \u0027table\u0027 ] ) | TaskOptions ( { \"0\" : { \"layout\" : \"Grid\" , \"alignment\" : { \"label\" : [ \"Country\" , \"Dystopia_Residual\" , \"Economy_GDP_per_Capita\" , \"Family\" , \"Freedom\" , \"Generosity\" , \"Happiness_Rank\" , \"Happiness_Score\" , \"HAPPYCSV\" , \"Health_Life_Expectancy\" , \"Inverse_Rank\" , \"Region\" , \"Standard_Error\" , \"Trust_Government_Corruption\" , \"Year\" ] } } } ) | Collect ( 500 ) ;DropColumn ( \"Inverse_Rank\" ) ;Frame ( ) | Select ( Country , Dystopia_Residual , Economy_GDP_per_Capita , Family , Freedom , Generosity , Happiness_Rank , Happiness_Score , HAPPYCSV , Health_Life_Expectancy , Region , Standard_Error , Trust_Government_Corruption , Year ) .as ( [ Country , Dystopia_Residual , Economy_GDP_per_Capita , Family , Freedom , Generosity , Happiness_Rank , Happiness_Score , HAPPYCSV , Health_Life_Expectancy , Region , Standard_Error , Trust_Government_Corruption , Year ] ) | Format ( type \u003d [ \u0027table\u0027 ] ) | TaskOptions ( { \"0\" : { \"layout\" : \"Grid\" , \"alignment\" : { \"label\" : [ \"Country\" , \"Dystopia_Residual\" , \"Economy_GDP_per_Capita\" , \"Family\" , \"Freedom\" , \"Generosity\" , \"Happiness_Rank\" , \"Happiness_Score\" , \"HAPPYCSV\" , \"Health_Life_Expectancy\" , \"Region\" , \"Standard_Error\" , \"Trust_Government_Corruption\" , \"Year\" ] } } } ) | Collect ( 500 ) ;Select ( ( ( 157 - Happiness_Rank ) + 1 ) , Happiness_Rank ) .as ( [ Inverse_Rank , Happiness_Rank ] ) | Merge ( ( Happiness_Rank , inner.join , Happiness_Rank ) ) ;Frame ( ) | Select ( Country , Dystopia_Residual , Economy_GDP_per_Capita , Family , Freedom , Generosity , Happiness_Rank , Happiness_Score , HAPPYCSV , Health_Life_Expectancy , Region , Standard_Error , Trust_Government_Corruption , Year , Inverse_Rank ) .as ( [ Country , Dystopia_Residual , Economy_GDP_per_Capita , Family , Freedom , Generosity , Happiness_Rank , Happiness_Score , HAPPYCSV , Health_Life_Expectancy , Region , Standard_Error , Trust_Government_Corruption , Year , Inverse_Rank ] ) | With ( Panel ( 0 ) ) | Format ( type \u003d [ \u0027table\u0027 ] ) | TaskOptions ( { \"0\" : { \"layout\" : \"Grid\" , \"alignment\" : { \"label\" : [ \"Country\" , \"Dystopia_Residual\" , \"Economy_GDP_per_Capita\" , \"Family\" , \"Freedom\" , \"Generosity\" , \"Happiness_Rank\" , \"Happiness_Score\" , \"HAPPYCSV\" , \"Health_Life_Expectancy\" , \"Region\" , \"Standard_Error\" , \"Trust_Government_Corruption\" , \"Year\" , \"Inverse_Rank\" ] } } } ) | Collect ( 500 ) ;Frame ( ) | Select ( Country , Dystopia_Residual , Economy_GDP_per_Capita , Family , Freedom , Generosity , Happiness_Rank , Happiness_Score , HAPPYCSV , Health_Life_Expectancy , Inverse_Rank , Region , Standard_Error , Trust_Government_Corruption , Year ) .as ( [ Country , Dystopia_Residual , Economy_GDP_per_Capita , Family , Freedom , Generosity , Happiness_Rank , Happiness_Score , HAPPYCSV , Health_Life_Expectancy , Inverse_Rank , Region , Standard_Error , Trust_Government_Corruption , Year ] ) | Format ( type \u003d [ \u0027table\u0027 ] ) | TaskOptions ( { \"0\" : { \"layout\" : \"Grid\" , \"alignment\" : { \"label\" : [ \"Country\" , \"Dystopia_Residual\" , \"Economy_GDP_per_Capita\" , \"Family\" , \"Freedom\" , \"Generosity\" , \"Happiness_Rank\" , \"Happiness_Score\" , \"HAPPYCSV\" , \"Health_Life_Expectancy\" , \"Inverse_Rank\" , \"Region\" , \"Standard_Error\" , \"Trust_Government_Corruption\" , \"Year\" ] } } } ) | Collect ( 500 ) ;Panel(0)|AddPanelOrnaments({\"showMenu\":true});Panel(0)|RetrievePanelOrnaments(\"showMenu\");"
}